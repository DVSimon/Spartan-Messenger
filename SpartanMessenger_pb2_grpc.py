# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import SpartanMessenger_pb2 as SpartanMessenger__pb2


class MessengerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.message = channel.unary_unary(
        '/messenger.Messenger/message',
        request_serializer=SpartanMessenger__pb2.SendMessage.SerializeToString,
        response_deserializer=SpartanMessenger__pb2.Response.FromString,
        )
    self.receive = channel.unary_stream(
        '/messenger.Messenger/receive',
        request_serializer=SpartanMessenger__pb2.Receive.SerializeToString,
        response_deserializer=SpartanMessenger__pb2.ChatResponse.FromString,
        )
    self.login = channel.unary_unary(
        '/messenger.Messenger/login',
        request_serializer=SpartanMessenger__pb2.LoginRequest.SerializeToString,
        response_deserializer=SpartanMessenger__pb2.Response.FromString,
        )
    self.group = channel.unary_unary(
        '/messenger.Messenger/group',
        request_serializer=SpartanMessenger__pb2.GroupRequest.SerializeToString,
        response_deserializer=SpartanMessenger__pb2.GroupResponse.FromString,
        )


class MessengerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def message(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def receive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def group(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessengerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'message': grpc.unary_unary_rpc_method_handler(
          servicer.message,
          request_deserializer=SpartanMessenger__pb2.SendMessage.FromString,
          response_serializer=SpartanMessenger__pb2.Response.SerializeToString,
      ),
      'receive': grpc.unary_stream_rpc_method_handler(
          servicer.receive,
          request_deserializer=SpartanMessenger__pb2.Receive.FromString,
          response_serializer=SpartanMessenger__pb2.ChatResponse.SerializeToString,
      ),
      'login': grpc.unary_unary_rpc_method_handler(
          servicer.login,
          request_deserializer=SpartanMessenger__pb2.LoginRequest.FromString,
          response_serializer=SpartanMessenger__pb2.Response.SerializeToString,
      ),
      'group': grpc.unary_unary_rpc_method_handler(
          servicer.group,
          request_deserializer=SpartanMessenger__pb2.GroupRequest.FromString,
          response_serializer=SpartanMessenger__pb2.GroupResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'messenger.Messenger', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
